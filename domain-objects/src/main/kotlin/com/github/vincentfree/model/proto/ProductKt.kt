//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: workshop.proto

package com.github.vincentfree.model.proto;

@kotlin.jvm.JvmSynthetic
inline fun product(block: com.github.vincentfree.model.proto.ProductKt.Dsl.() -> Unit): com.github.vincentfree.model.proto.Product =
  com.github.vincentfree.model.proto.ProductKt.Dsl._create(com.github.vincentfree.model.proto.Product.newBuilder()).apply { block() }._build()
object ProductKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: com.github.vincentfree.model.proto.Product.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.vincentfree.model.proto.Product.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.vincentfree.model.proto.Product = _builder.build()

    /**
     * <code>string productId = 1;</code>
     */
    var productId: kotlin.String
      @JvmName("getProductId")
      get() = _builder.getProductId()
      @JvmName("setProductId")
      set(value) {
        _builder.setProductId(value)
      }
    /**
     * <code>string productId = 1;</code>
     */
    fun clearProductId() {
      _builder.clearProductId()
    }

    /**
     * <code>string name = 2;</code>
     */
    var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 2;</code>
     */
    fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>int32 quantity = 3;</code>
     */
    var quantity: kotlin.Int
      @JvmName("getQuantity")
      get() = _builder.getQuantity()
      @JvmName("setQuantity")
      set(value) {
        _builder.setQuantity(value)
      }
    /**
     * <code>int32 quantity = 3;</code>
     */
    fun clearQuantity() {
      _builder.clearQuantity()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun com.github.vincentfree.model.proto.Product.copy(block: com.github.vincentfree.model.proto.ProductKt.Dsl.() -> Unit): com.github.vincentfree.model.proto.Product =
  com.github.vincentfree.model.proto.ProductKt.Dsl._create(this.toBuilder()).apply { block() }._build()
